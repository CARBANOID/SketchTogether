// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model User{
  id          String     @id  @default(uuid())
  username    String     
  password    String 
  email       String     @unique
  photo       String?
  rooms       Room[]
  chats       Chat[]
  shapes      Shape[]
}

model Room{ 
  id          String     @id  @default(uuid())  
  slug        String          @unique
  createdAt   DateTime        @default(now())
  adminId     String     
  chats       Chat[]
  shapes      Shape[]
  admin       User       @relation(fields: [adminId],references: [id], onDelete: Cascade , onUpdate: Cascade)
} 

model Chat{
  id          Int         @id  @default(autoincrement())
  message     String    
  roomId      String
  userId      String     
  room        Room        @relation(fields: [roomId],references: [id] ,onDelete : Cascade , onUpdate: Cascade)
  user        User        @relation(fields: [userId],references: [id] ,onDelete : Cascade , onUpdate: Cascade)
}


model Shape{
  id          Int         @id  @default(autoincrement())
  shape       Json    
  roomId      String
  userId      String     
  room        Room        @relation(fields: [roomId],references: [id] ,onDelete : Cascade , onUpdate: Cascade)
  user        User        @relation(fields: [userId],references: [id] ,onDelete : Cascade , onUpdate: Cascade)
}